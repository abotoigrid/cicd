name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # static-analysis:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up JDK
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: '17'
  #         distribution: 'temurin'
  #     - name: Run static analysis
  #       run: mvn checkstyle:check

  # test:
  #   runs-on: ubuntu-latest
  #   #needs: static-analysis
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up JDK
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: '17'
  #         distribution: 'temurin'
  #     - name: Cache Maven packages
  #       uses: actions/cache@v4
  #       with:
  #         path: ~/.m2/repository
  #         key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-${{ github.base_ref }}
  #         restore-keys: |
  #           ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-
  #     - name: Run Tests
  #       run: mvn -B -e test

  build:
    runs-on: ubuntu-latest
    #needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-${{ github.base_ref }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-
      - name: Build with Maven
        run: mvn -B -e package
      
  create-artifact-pr:
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Construct Docker tag
        id: set_docker_tag
        run: |
          OWNER_LOWERCASE=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          TAG="ghcr.io/$OWNER_LOWERCASE/ci-cd:${{ github.sha }}"
          echo "docker_tag=$TAG" >> $GITHUB_OUTPUT
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.set_docker_tag.outputs.docker_tag }}
          build-args: JAR_FILE=target/*.jar

  create-artifact-main:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Bump version and push tag
        id: tag_version
        run: |
          python -m pip install --upgrade pip
          pip install python-semantic-release
          
          # Create a basic configuration file for python-semantic-release
          cat <<EOF > pyproject.toml
          [tool.semantic_release]
          version_variables = []  # No need to update version in files for this example
          tag_format = "{version}"    # Customize tag format (no "v" prefix)
          EOF

          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          semantic-release version --minor
          git push --follow-tags origin main
          NEW_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "new_tag=$NEW_TAG" >> "$GITHUB_OUTPUT"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Construct Docker tag
        id: set_docker_tag
        run: |
          OWNER_LOWERCASE=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          TAG="ghcr.io/$OWNER_LOWERCASE/ci-cd:${{ steps.tag_version.outputs.new_tag }}"
          echo "docker_tag=$TAG" >> $GITHUB_OUTPUT
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.set_docker_tag.outputs.docker_tag }}
          build-args: JAR_FILE=target/*.jar
            

          

