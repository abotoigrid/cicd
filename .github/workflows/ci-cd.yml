name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # static-analysis:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up JDK
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: '17'
  #         distribution: 'temurin'
  #     - name: Run static analysis
  #       run: mvn checkstyle:check

  # test:
  #   runs-on: ubuntu-latest
  #   #needs: static-analysis
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up JDK
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: '17'
  #         distribution: 'temurin'
  #     - name: Cache Maven packages
  #       uses: actions/cache@v4
  #       with:
  #         path: ~/.m2/repository
  #         key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-${{ github.base_ref }}
  #         restore-keys: |
  #           ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-
  #     - name: Run Tests
  #       run: mvn -B -e test

  build:
    runs-on: ubuntu-latest
    #needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-${{ github.base_ref }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-
      - name: Build with Maven
        run: mvn -B -e package
      - name: Copy target to root
        run: cp -r target ./

  create-artifact-pr:
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Construct Docker tag
        id: set_docker_tag
        run: |
          OWNER_LOWERCASE=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          TAG="ghcr.io/$OWNER_LOWERCASE/ci-cd:${{ github.sha }}"
          echo "docker_tag=$TAG" >> $GITHUB_OUTPUT
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.set_docker_tag.outputs.docker_tag }}
          build-args: JAR_FILE=target/*.jar


          

         
